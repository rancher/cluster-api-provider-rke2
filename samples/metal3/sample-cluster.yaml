apiVersion: v1
kind: Namespace
metadata:
  name: ${CABPR_NAMESPACE}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: ${CABPR_NAMESPACE}
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/18
    services:
      cidrBlocks:
      - 10.96.0.0/12
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: RKE2ControlPlane
    name: ${CLUSTER_NAME}
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: Metal3Cluster
    name: ${CLUSTER_NAME}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: Metal3Cluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: ${CABPR_NAMESPACE}
spec:
  controlPlaneEndpoint:
    host: ${CLUSTER_API_HOSTNAME}
    port: ${CLUSTER_API_PORT
  noCloudProvider: true
---
apiVersion: ipam.metal3.io/v1alpha1
kind: IPPool
metadata:
  name: provisioning-pool
  namespace: ${CABPR_NAMESPACE}
spec:
  clusterName: ${CLUSTER_NAME}
  gateway: ${PROVISIONING_NETWORK_GATEWAY}
  namePrefix: ${CLUSTER_NAME}-prov
  pools:
  - end: ${PROVISIONING_NETWORK_IP_POOL_END}
    start: ${PROVISIONING_NETWORK_IP_POOL_START}
  prefix: ${PROVISIONING_NETWORK_IP_POOL_PREFIX}
---
apiVersion: ipam.metal3.io/v1alpha1
kind: IPPool
metadata:
  name: public-pool
  namespace: ${CABPR_NAMESPACE}
spec:
  clusterName: ${CLUSTER_NAME}
  gateway: ${PUBLIC_NETWORK_GATEWAY}
  namePrefix: ${CLUSTER_NAME}-bmv4
  pools:
  - end: ${PUBLIC_NETWORK_IP_POOL_END}
    start: ${PUBLIC_NETWORK_IP_POOL_START}
  prefix: ${PUBLIC_NETWORK_IP_POOL_PREFIX}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: RKE2ControlPlane
metadata:
  name: ${CLUSTER_NAME}
  namespace: ${CABPR_NAMESPACE}
spec:
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: Metal3MachineTemplate
    name: ${CLUSTER_NAME}-controlplane
  replicas: 1
  agentConfig:
    kubelet:
      extraArgs:
        - provider-id=metal3://{{ ds.meta_data.uuid }}
    nodeName: '{{ ds.meta_data.local_hostname }}'
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: Metal3MachineTemplate
metadata:
  name: ${CLUSTER_NAME}-controlplane
  namespace: ${CABPR_NAMESPACE}
spec:
  template:
    spec:
      dataTemplate:
        name: ${CLUSTER_NAME}-controlplane-template
      hostSelector:
        matchLabels:
          cluster-role: control-plane
      image:
        checksum: ${IMAGE_CHECKSUM}
        checksumType: ${IMAGE_CHECKSUM_TYPE}
        format: ${IMAGE_FORMAT}
        url: ${IMAGE_URL}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: Metal3DataTemplate
metadata:
  name: ${CLUSTER_NAME}-controlplane-template
  namespace: ${CABPR_NAMESPACE}
spec:
  clusterName: ${CLUSTER_NAME}
  metaData:
    ipAddressesFromIPPool:
    - key: provisioningIP
      name: provisioning-pool
    objectNames:
    - key: name
      object: machine
    - key: local-hostname
      object: machine
    - key: local_hostname
      object: machine
    prefixesFromIPPool:
    - key: provisioningCIDR
      name: provisioning-pool
  networkData:
    links:
      ethernets:
      - id: eth2
        macAddress:
          fromHostInterface: eth2
        type: phy
      vlans:
      - id: eth2.999
        macAddress:
          fromHostInterface: eth2
        vlanID: 999
        vlanLink: eth2
    networks:
      ipv4:
      - id: eth2
        ipAddressFromIPPool: provisioning-pool
        link: eth2
        routes:
        - gateway:
            fromIPPool: provisioning-pool
          network: ${PROVISIONING_NETWORK}
          prefix: ${PROVISIONING_NETWORK_PREFIX}
      - id: eth2.999
        ipAddressFromIPPool: public-pool
        link: eth2.999
        routes:
        - gateway:
            fromIPPool: public-pool
          network: 0.0.0.0
    services:
      dns:
      - ${DNS_SERVER}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
    nodepool: nodepool-0
  name: ${CLUSTER_NAME}
  namespace: ${CABPR_NAMESPACE}
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
      nodepool: nodepool-0
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
        nodepool: nodepool-0
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: RKE2ConfigTemplate
          name: ${CLUSTER_NAME}-workers
      clusterName: ${CLUSTER_NAME}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: Metal3MachineTemplate
        name: ${CLUSTER_NAME}-workers
      nodeDrainTimeout: 0s
      version: ${KUBERNETES_VERSION}+rke2r1
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: Metal3MachineTemplate
metadata:
  name: ${CLUSTER_NAME}-workers
  namespace: ${CABPR_NAMESPACE}
spec:
  template:
    spec:
      dataTemplate:
        name: ${CLUSTER_NAME}-workers-template
      hostSelector:
        matchLabels:
          cluster-role: worker
      image:
        checksum: ${IMAGE_CHECKSUM}
        checksumType: ${IMAGE_CHECKSUM_TYPE}
        format: ${IMAGE_FORMAT}
        url: ${IMAGE_URL}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: Metal3DataTemplate
metadata:
  name: ${CLUSTER_NAME}-workers-template
  namespace: ${CABPR_NAMESPACE}
spec:
  clusterName: ${CLUSTER_NAME}
  metaData:
    ipAddressesFromIPPool:
    - key: provisioningIP
      name: provisioning-pool
    objectNames:
    - key: name
      object: machine
    - key: local-hostname
      object: machine
    - key: local_hostname
      object: machine
    prefixesFromIPPool:
    - key: provisioningCIDR
      name: provisioning-pool
  networkData:
    links:
      ethernets:
      - id: eth4
        macAddress:
          fromHostInterface: eth4
        type: phy
      vlans:
      - id: eth4.999
        macAddress:
          fromHostInterface: eth4
        vlanID: 999
        vlanLink: eth4
    networks:
      ipv4:
      - id: eth4
        ipAddressFromIPPool: provisioning-pool
        link: eth4
        routes:
        - gateway:
            fromIPPool: provisioning-pool
          network: ${PROVISIONING_NETWORK}
          prefix: ${PROVISIONING_NETWORK_PREFIX}
      - id: eth4.999
        ipAddressFromIPPool: public-pool
        link: eth4.999
        routes:
        - gateway:
            fromIPPool: public-pool
          network: 0.0.0.0
    services:
      dns:
      - ${DNS_SERVER}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: RKE2ConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-workers
  namespace: ${CABPR_NAMESPACE}
spec:
  template:
    spec:
      preRKE2Commands:
        - sleep 30 # fix to give OS time to become ready
      agentConfig:
        kubelet:
          extraArgs:
            - provider-id=metal3://{{ ds.meta_data.uuid }}
        nodeName: '{{ ds.meta_data.local_hostname }}'
